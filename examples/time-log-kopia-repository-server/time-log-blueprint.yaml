apiVersion: cr.kanister.io/v1alpha1
kind: Blueprint
metadata:
  name: time-log
  namespace: kanister
actions:
  backup:
    outputArtifacts:
      backupIdentifier:
        keyValue:
          id: "{{ .Phases.backupToS3.Output.backupID }}"
    phases:
      - func: BackupDataUsingKopiaServer
        name: backupToS3
        args:
          namespace: "{{ .Deployment.Namespace }}"
          pod: "{{ index .Deployment.Pods 0 }}"
          container: test-container
          includePath: /var/log

  restore:
    inputArtifactNames:
      - backupIdentifier
    phases:
      - func: ScaleWorkload
        name: shutdownPod
        args:
          namespace: "{{ .Deployment.Namespace }}"
          name: "{{ .Deployment.Name }}"
          kind: Deployment
          replicas: 0
      - func: RestoreDataUsingKopiaServer
        name: restoreFromS3
        args:
          namespace: "{{ .Deployment.Namespace }}"
          pod: "{{ index .Deployment.Pods 0 }}"
          image: ghcr.io/kanisterio/kanister-tools:0.92.0
          backupIdentifier: "{{ .ArtifactsIn.backupIdentifier.KeyValue.id }}"
          restorePath: /var/log
      - func: ScaleWorkload
        name: bringupPod
        args:
          namespace: "{{ .Deployment.Namespace }}"
          name: "{{ .Deployment.Name }}"
          kind: Deployment
          replicas: 1

  delete:
    inputArtifactNames:
      - backupIdentifier
    phases:
      - func: DeleteDataUsingKopiaServer
        name: deleteFromS3
        args:
          namespace: "{{ .Deployment.Namespace }}"
          image: ghcr.io/kanisterio/kanister-tools:0.92.0
          backupID: "{{ .ArtifactsIn.backupIdentifier.KeyValue.id }}"
          